
@using Microsoft.EntityFrameworkCore;
@* @model MVC.Areas_Copy.Database.Views.DbManage.IndexModel *@
@inject AppDbContext dbContext

@{
    ViewData["Title"] = "Thong tin Db";
    var connect = dbContext.Database.GetDbConnection();
    var dbName = connect.Database;
    var canConnect = dbContext.Database.CanConnect();

    dbContext.Database.GetPendingMigrations();
}

<partial name="_AlertMessage" />

<h1>Thong tin ve co so du lieu</h1>

<p>- Databse: @dbName</p>
<p>- Source: @connect.DataSource</p>
<p>- State: @connect.State</p>
<hr />
<h2>
    Migrations
</h2>
@foreach (var migration in dbContext.Database.GetAppliedMigrations())
{
    <p>@migration</p>
}

@foreach (var migration in dbContext.Database.GetPendingMigrations())
{
    <p>@migration (pending)</p>
}

@if (!canConnect)
{
    <p class="alert alert-danger">Khong co kha nang ket noi den Database</p>
}

@if (dbContext.Database.GetPendingMigrations().Any())
{
    <form method="post">
        <btn class="btn btn-success" asp-action="Migrate">Tao DB (cap nhat Migration)</btn>
    </form>
}

@if (canConnect)
{
    <h2>Cac table</h2>
    await dbContext.Database.OpenConnectionAsync();
    var table = dbContext.Database.GetDbConnection().GetSchema("Tables");
    <ul>
        @foreach (System.Data.DataRow row in table.Rows)
        {
            <li>@row["TABLE_NAME"]</li>
        }
    </ul>

    <a class="btn btn-danger" asp-action="DeleteDb">Xoa Database: @dbName</a>
}
